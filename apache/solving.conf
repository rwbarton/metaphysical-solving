<VirtualHost *:443>
    	ServerName metaphysicalplant.com
    	ServerAdmin webmaster@localhost

    	WSGIScriptAlias / /home/puzzle/metaphysical-solving/solving/wsgi.py
    	WSGIDaemonProcess metaphysicalplant.com python-home=/home/puzzle/metaphysical-solving/env python-path=/home/puzzle/metaphysical-solving
    	WSGIProcessGroup metaphysicalplant.com

    	<Directory />
            	Order allow,deny
            	Allow from all
            	Require valid-user
            	AuthUserFile /var/www/htpasswd
            	AuthName "Metaphysical Plant Solving Server"
            	AuthType Basic
    	</Directory>

    	Alias /static/ "/home/puzzle/static/"
    	<Directory "/home/puzzle/static/">
            	Order deny,allow
            	Allow from all
    	</Directory>

    	Alias /uploads/ "/var/www/uploads/"
    	<Directory "/var/www/uploads/">
            	Order deny,allow
            	Allow from all
    	</Directory>

    	Redirect /help/ https://docs.google.com/document/d/1tGpGn5kTsVdv5lO5M29zS1qKjdKFz62gdZIuZ5RcqUU/edit?usp=sharing

    	ErrorLog ${APACHE_LOG_DIR}/error.log

    	# Possible values include: debug, info, notice, warn, error, crit,
    	# alert, emerg.
    	LogLevel warn

    	CustomLog ${APACHE_LOG_DIR}/access.log combined

	Alias /doc/ "/usr/share/doc/"
	<Directory "/usr/share/doc/">
    	Options Indexes MultiViews FollowSymLinks
    	AllowOverride None
    	Order deny,allow
    	Deny from all
    	Allow from 127.0.0.0/255.0.0.0 ::1/128
	</Directory>

            	#   SSL Engine Switch:
            	#   Enable/Disable SSL for this virtual host.
            	SSLEngine on

            	#   A self-signed (snakeoil) certificate can be created by installing
            	#   the ssl-cert package. See
            	#   /usr/share/doc/apache2/README.Debian.gz for more info.
            	#   If both key and certificate are stored in the same file, only the
            	#   SSLCertificateFile directive is needed.

            	#   Server Certificate Chain:
            	#   Point SSLCertificateChainFile at a file containing the
            	#   concatenation of PEM encoded CA certificates which form the
            	#   certificate chain for the server certificate. Alternatively
            	#   the referenced file can be the same as SSLCertificateFile
            	#   when the CA certificates are directly appended to the server
            	#   certificate for convinience.

            	#   SSL Engine Options:
            	#   Set various options for the SSL engine.
            	#   o FakeBasicAuth:
            	#    	Translate the client X.509 into a Basic Authorisation.  This means that
            	#    	the standard Auth/DBMAuth methods can be used for access control.  The
            	#    	user name is the `one line' version of the client's X.509 certificate.
            	#    	Note that no password is obtained from the user. Every entry in the user
            	#    	file needs this password: `xxj31ZMTZzkVA'.
            	#   o ExportCertData:
            	#    	This exports two additional environment variables: SSL_CLIENT_CERT and
            	#    	SSL_SERVER_CERT. These contain the PEM-encoded certificates of the
            	#    	server (always existing) and the client (only existing when client
            	#    	authentication is used). This can be used to import the certificates
            	#    	into CGI scripts.
            	#   o StdEnvVars:
            	#    	This exports the standard SSL/TLS related `SSL_*' environment variables.
            	#    	Per default this exportation is switched off for performance reasons,
            	#    	because the extraction step is an expensive operation and is usually
            	#    	useless for serving static content. So one usually enables the
            	#    	exportation for CGI and SSI requests only.
            	#   o OptRenegotiate:
            	#    	This enables optimized SSL connection renegotiation handling when SSL
            	#    	directives are used in per-directory context.
            	#SSLOptions +FakeBasicAuth +ExportCertData +StrictRequire
            	<FilesMatch "\.(cgi|shtml|phtml|php)$">
                            	SSLOptions +StdEnvVars
            	</FilesMatch>
            	<Directory /usr/lib/cgi-bin>
                            	SSLOptions +StdEnvVars
            	</Directory>

            	#   SSL Protocol Adjustments:
            	#   The safe and default but still SSL/TLS standard compliant shutdown
            	#   approach is that mod_ssl sends the close notify alert but doesn't wait for
            	#   the close notify alert from client. When you need a different shutdown
            	#   approach you can use one of the following variables:
            	#   o ssl-unclean-shutdown:
            	#    	This forces an unclean shutdown when the connection is closed, i.e. no
            	#    	SSL close notify alert is send or allowed to received.  This violates
            	#    	the SSL/TLS standard but is needed for some brain-dead browsers. Use
            	#    	this when you receive I/O errors because of the standard approach where
            	#    	mod_ssl sends the close notify alert.
            	#   o ssl-accurate-shutdown:
            	#    	This forces an accurate shutdown when the connection is closed, i.e. a
            	#    	SSL close notify alert is send and mod_ssl waits for the close notify
            	#    	alert of the client. This is 100% SSL/TLS standard compliant, but in
            	#    	practice often causes hanging connections with brain-dead browsers. Use
            	#    	this only for browsers where you know that their SSL implementation
            	#    	works correctly.
            	#   Notice: Most problems of broken clients are also related to the HTTP
            	#   keep-alive facility, so you usually additionally want to disable
            	#   keep-alive for those clients, too. Use variable "nokeepalive" for this.

            	#   Similarly, one has to force some clients to use HTTP/1.0 to workaround
            	#   their broken HTTP/1.1 implementation. Use variables "downgrade-1.0" and
            	#   "force-response-1.0" for this.
            	BrowserMatch	"MSIE [2-6]"nokeepalive ssl-unclean-shutdown downgrade-1.0 force-response-1.0
            	# MSIE 7 and newer should be able to use keepalive
            	BrowserMatch "MSIE [17-9]"ssl-unclean-shutdown

</VirtualHost>
